# x$CT_Date_Time = gsub("-", "", x$CT_Date_Time)
xx= merge(x, y, all.x=TRUE)
table(xx$CT_Date_Time)
table(xx$y)
head(x$formgroup_RC)
head(y$formgroup_RC)
x = read.csv("~/Downloads/All_ABC2_Data_with_Demographics.csv",
as.is=TRUE, header=TRUE)
ddir = "~/DHanley/CLEAR III/CLEAR III Analysis/CLEAR III Data Review/statadata"
y = read.csv(file.path(ddir, "All_ABC2_Data_with_Demographics.csv"),
as.is=TRUE, header=TRUE)
x$x = 1
y = y[, c("patientName", "CTType", "formgroup_RC", "CT_Date_Time",
"calculated_ich_volume_Site")]
y$y = 1
y$CT_Date_Time = tolower(y$CT_Date_Time)
ss = strsplit(x$CT_Date_Time, "-")
ss = lapply(ss, function(x){
if (length(x) == 3) {
x[3] = paste0("20", x[3])
} else if (length(x) == 0) {
x = ""
} else {
print(x)
}
x
})
x$CT_Date_Time = sapply(ss, paste, collapse="")
# x$CT_Date_Time = gsub("-", "", x$CT_Date_Time)
xx= merge(x, y, all=TRUE)
head(xx)
x = read.csv("~/Downloads/All_ABC2_Data_with_Demographics.csv",
as.is=TRUE, header=TRUE)
ddir = "~/DHanley/CLEAR III/CLEAR III Analysis/CLEAR III Data Review/statadata"
y = read.csv(file.path(ddir, "All_ABC2_Data_with_Demographics.csv"),
as.is=TRUE, header=TRUE)
x$x = 1
y = y[, c("patientName", "CTType", "formgroup_RC", "CT_Date_Time",
"calculated_ich_volume_Site")]
y$y = 1
y$CT_Date_Time = tolower(y$CT_Date_Time)
ss = strsplit(x$CT_Date_Time, "-")
ss = lapply(ss, function(x){
if (length(x) == 3) {
x[3] = paste0("20", x[3])
} else if (length(x) == 0) {
x = ""
} else {
print(x)
}
x
})
x$CT_Date_Time = tolower(sapply(ss, paste, collapse=""))
# x$CT_Date_Time = gsub("-", "", x$CT_Date_Time)
xx= merge(x, y, all=TRUE)
table(xx$y)
head(xx)
x = read.csv("~/Downloads/All_ABC2_Data_with_Demographics.csv",
as.is=TRUE, header=TRUE)
ddir = "~/DHanley/CLEAR III/CLEAR III Analysis/CLEAR III Data Review/statadata"
y = read.csv(file.path(ddir, "All_ABC2_Data_with_Demographics.csv"),
as.is=TRUE, header=TRUE)
x$x = 1
y = y[, c("patientName", "CTType", "formgroup_RC", "CT_Date_Time",
"calculated_ich_volume_Site")]
y$y = 1
y$CT_Date_Time = tolower(y$CT_Date_Time)
ss = strsplit(x$CT_Date_Time, "-")
ss = lapply(ss, function(x){
if (length(x) == 3) {
x[3] = paste0("20", x[3])
} else if (length(x) == 0) {
x = ""
} else {
print(x)
}
x
})
x$CT_Date_Time = tolower(sapply(ss, paste, collapse=""))
# x$CT_Date_Time = gsub("-", "", x$CT_Date_Time)
xx= merge(x, y, all.x=TRUE)
table(xx$y)
table(xx$y, xx$x)
table(xx$y, xx$x, useNA='ifany')
table(xx$x, xx$y, useNA='ifany')
table(x=xx$x, y=xx$y, useNA='ifany')
xx[ which(xx$x ==1 & is.na(xx$y) ),]
head(xx[ which(xx$x ==1 & is.na(xx$y) ),])
x = read.csv("~/Downloads/All_ABC2_Data_with_Demographics.csv",
as.is=TRUE, header=TRUE)
ddir = "~/DHanley/CLEAR III/CLEAR III Analysis/CLEAR III Data Review/statadata"
y = read.csv(file.path(ddir, "All_ABC2_Data_with_Demographics.csv"),
as.is=TRUE, header=TRUE)
x$x = 1
y = y[, c("patientName", "CTType", "formgroup_RC", "CT_Date_Time",
"calculated_ich_volume_Site")]
y$y = 1
y$CT_Date_Time = tolower(y$CT_Date_Time)
ss = strsplit(x$CT_Date_Time, "-")
ss = lapply(ss, function(x){
if (length(x) == 3) {
x[3] = paste0("20", x[3])
} else if (length(x) == 0) {
x = ""
} else {
print(x)
}
x
})
x$CT_Date_Time = tolower(sapply(ss, paste, collapse=""))
# x$CT_Date_Time = gsub("-", "", x$CT_Date_Time)
xx= merge(x, y, all=TRUE)
head(xx[ which(xx$x ==1 & is.na(xx$y) ),])
head(xx[ which(xx$x ==1 & is.na(xx$y) ),])
y[ y$patientName== "1004267",]
x = read.csv("~/Downloads/All_ABC2_Data_with_Demographics.csv",
as.is=TRUE, header=TRUE)
ddir = "~/DHanley/CLEAR III/CLEAR III Analysis/CLEAR III Data Review/statadata"
y = read.csv(file.path(ddir, "All_ABC2_Data_with_Demographics.csv"),
as.is=TRUE, header=TRUE)
x$x = 1
y = y[, c("patientName", "CTType", "formgroup_RC", "CT_Date_Time", "CTTime",
"calculated_ich_volume_Site")]
y$y = 1
y$CT_Date_Time = tolower(y$CT_Date_Time)
ss = strsplit(x$CT_Date_Time, "-")
ss = lapply(ss, function(x){
if (length(x) == 3) {
x[3] = paste0("20", x[3])
} else if (length(x) == 0) {
x = ""
} else {
print(x)
}
x
})
x$CT_Date_Time = tolower(sapply(ss, paste, collapse=""))
# x$CT_Date_Time = gsub("-", "", x$CT_Date_Time)
xx= merge(x, y, all=TRUE)
xx = xx[order(xx$patientName, xx$CT_Date_Time, xx$CTTime), ]
head(xx[ which(xx$x ==1 & is.na(xx$y) ),])
xx[ xx$patientName== "1004267",]
head(xx)
head(x)
x = read.csv("~/Downloads/All_ABC2_Data_with_Demographics.csv",
as.is=TRUE, header=TRUE)
ddir = "~/DHanley/CLEAR III/CLEAR III Analysis/CLEAR III Data Review/statadata"
y = read.csv(file.path(ddir, "All_ABC2_Data_with_Demographics.csv"),
as.is=TRUE, header=TRUE)
x$x = 1
y = y[, c("patientName", "CTType", "formgroup_RC", "CT_Date_Time", "CTTime",
"calculated_ich_volume_Surg")]
y$y = 1
y$CT_Date_Time = tolower(y$CT_Date_Time)
ss = strsplit(x$CT_Date_Time, "-")
ss = lapply(ss, function(x){
if (length(x) == 3) {
x[3] = paste0("20", x[3])
} else if (length(x) == 0) {
x = ""
} else {
print(x)
}
x
})
x$CT_Date_Time = tolower(sapply(ss, paste, collapse=""))
# x$CT_Date_Time = gsub("-", "", x$CT_Date_Time)
xx= merge(x, y, all=TRUE)
xx = xx[order(xx$patientName, xx$CT_Date_Time, xx$CTTime), ]
head(xx[ which(xx$x ==1 & is.na(xx$y) ),])
xx[xx$patientName== "1004233", ]
head(xx[ which(xx$x ==1 & is.na(xx$y) ),])
x = read.csv("~/Downloads/All_ABC2_Data_with_Demographics.csv",
as.is=TRUE, header=TRUE)
ddir = "~/DHanley/CLEAR III/CLEAR III Analysis/CLEAR III Data Review/statadata"
y = read.csv(file.path(ddir, "All_ABC2_Data_with_Demographics.csv"),
as.is=TRUE, header=TRUE)
x$old = TRUE
y = y[, c("patientName", "CTType", "formgroup_RC", "CT_Date_Time", "CTTime",
"calculated_ich_volume_Surg")]
y$new = TRUE
y$CT_Date_Time = tolower(y$CT_Date_Time)
ss = strsplit(x$CT_Date_Time, "-")
ss = lapply(ss, function(x){
if (length(x) == 3) {
x[3] = paste0("20", x[3])
} else if (length(x) == 0) {
x = ""
} else {
print(x)
}
x
})
x$CT_Date_Time = tolower(sapply(ss, paste, collapse=""))
# x$CT_Date_Time = gsub("-", "", x$CT_Date_Time)
xx= merge(x, y, all=TRUE)
xx = xx[order(xx$patientName, xx$CT_Date_Time, xx$CTTime), ]
head(xx[ which(xx$old ==1 & is.na(xx$new) ),])
x = read.csv("~/Downloads/All_ABC2_Data_with_Demographics.csv",
as.is=TRUE, header=TRUE)
ddir = "~/DHanley/CLEAR III/CLEAR III Analysis/CLEAR III Data Review/statadata"
y = read.csv(file.path(ddir, "All_ABC2_Data_with_Demographics.csv"),
as.is=TRUE, header=TRUE)
x$old = TRUE
y = y[, c("patientName", "CTType", "formgroup_RC", "CT_Date_Time", "CTTime",
"calculated_ich_volume_Surg")]
y$new = TRUE
y$CT_Date_Time = tolower(y$CT_Date_Time)
ss = strsplit(x$CT_Date_Time, "-")
ss = lapply(ss, function(x){
if (length(x) == 3) {
x[3] = paste0("20", x[3])
} else if (length(x) == 0) {
x = ""
} else {
print(x)
}
x
})
x$CT_Date_Time = tolower(sapply(ss, paste, collapse=""))
# x$CT_Date_Time = gsub("-", "", x$CT_Date_Time)
xx= merge(x, y, all=TRUE)
xx = xx[order(xx$patientName, xx$CT_Date_Time, xx$CTTime), ]
write.csv(xx[which(x$old == TRUE), ],
file="~/Downloads/All_ABC2_Data_with_Demographics_2014Jul18.csv")
rm(list=ls())
library(R.matlab)
library(oro.nifti)
library(plyr)
library(ggplot2)
library(reshape2)
library(RColorBrewer)
library(knitrBootstrap)
library(xtable)
library(scales)
library(animation)
library(cttools)
writepng = function(fname, tempimg= NULL, adder ='', rerun=TRUE,
text = "", col.y = alpha(hotmetal(10), 0.7), ...){
pngname = gsub("\\.nii\\.gz",
paste0(adder, ".png"), fname)
if (!file.exists(pngname) | rerun){
pimg = readNIfTI(fname)
# mask.overlay
png(pngname, type="cairo")
if (is.null(tempimg)) {
orthographic(pimg, text=text, ...)
} else {
mask.overlay(tempimg, pimg, col.y=col.y, ...)
}
dev.off()
}
return(pngname)
}
img_cut = function(img, breaks, ...){
cuts = cut(img, breaks=breaks, ...)
# cuts = factor(cuts, levels)
levs = levels(cuts)
cuts = as.numeric(cuts)
# res.p[ rs > ncut ] = cuts
img@.Data = array(cuts, dim=dim(img))
return(list(img=img, levs=levs))
}
### need cairo for cluster
options(bitmapType='cairo')
homedir = "/Applications"
rootdir = "/Volumes/DATA_LOCAL/Image_Processing"
if (Sys.info()[["user"]] %in% "jmuschel") {
homedir = "~"
rootdir = "/dexter/disk2/smart/stroke_ct/ident"
}
progdir = file.path(rootdir, "programs")
# source(file.path(progdir, "convert_DICOM.R"))
# source(file.path(progdir, "fslhd.R"))
basedir = file.path(rootdir, "Registration")
#### baseline NIHSSS ata
nihss = read.csv(file.path(basedir, "baseline_NIHSS.csv"),
stringsAsFactors=FALSE)
tempdir = file.path(rootdir, "Template")
atlasdir = file.path(tempdir, "atlases")
outdir = file.path(basedir, "results")
whichdir = "reoriented"
# whichdir = "FLIRT"
rerun = FALSE
template = file.path(tempdir, "scct_unsmooth.nii.gz")
temp = readNIfTI(template)
t.t1 = file.path(tempdir, "sct1_unsmooth.nii.gz")
temp.t1 = readNIfTI(t.t1)
setwd(progdir)
spm.binimg = file.path(outdir, paste0(whichdir, "_Binary_Sum_Image"))
spm.binimg = paste0(spm.binimg, ".nii.gz")
col.y = alpha(div_gradient_pal(low="blue",
mid=muted("red"),
high="yellow")(
seq(0, 1, length=100)
), 1)
fname = spm.binimg
spm2_t1_hot_overlay.png = writepng(spm.binimg, tempimg= temp.t1,
adder = "_t1_heat_overlay", window = c(500, 1000),
col.y = col.y,
rerun=TRUE, text ="Weighted Average")
tempimg = temp.t1
window = c(300, 1000)
text ="Population Average"
pimg = readNIfTI(fname)
####
breaks = seq(0, .45, by=.05)
col.cut = alpha(div_gradient_pal(low="blue",
mid="red",
high="yellow")(
seq(0, 1, length=length(breaks)-1)
), .7)
img = check_nifti(tempimg)
img.mask = check_nifti(pimg)
img@cal_min = window[1]
img@cal_max = window[2]
img[img < window[1]] = window[1]
img[img >= window[2]] = window[2]
img.mask[img.mask <= 0] = NA
clist = img_cut(pimg, breaks=breaks, include.lowest=FALSE)
cimg = clist$img
levs = clist$levs
plevs = levs
plevs = gsub("\\(", "", plevs)
plevs = gsub("\\]", "", plevs)
plevs = strsplit(plevs, ",")
plevs = lapply(plevs, as.numeric)
plevs = lapply(plevs, `*`, 100)
plevs = lapply(plevs, function(x){
x[2] = x[2] - .01
x
})
plevs = sapply(plevs, function(x){
paste0(x[1], "-", x[2], "%")
})
fname = file.path(outdir, "Figure4_Percent.png")
png(fname, res=600, height=7, width=7, units="in")
ortho2(img, img.mask, col.y=col.cut,
ybreaks = breaks,
addlegend = TRUE,
text="B", text.cex = 5,
text.x= 50, text.y=32,
leg.x = 5, leg.y= 60,
legend=plevs,
leg.col=col.cut, leg.cex=1.5,
leg.title = "Percent of Sample\n with Hemorrhage")
dev.off()
fname = file.path(outdir, "Figure4_Proportion.png")
png(fname, res=600, height=7, width=7, units="in")
ortho2(img, img.mask, col.y=col.cut,
ybreaks = breaks,
addlegend = TRUE,
text="B", text.cex = 5,
text.x= 50, text.y=32,
leg.x = 5, leg.y= 60,
legend=levs,
leg.col=col.cut, leg.cex=1.5,
leg.title = "Proportion of Sample\n with Hemorrhage")
dev.off()
# mask.overlay(tempimg, cimg, col.y=col.cut, text=text, window=window,
# 	ybreaks = seq(1, 11))
dtemp = dim(temp.t1)
xyz <- ceiling(dtemp/2)
setwd(outdir)
pimg = readNIfTI(spm.binimg)
adder = "_t1_heat_overlay"
vals = c(pimg@.Data)
rm(list=ls())
library(R.matlab)
library(oro.nifti)
library(plyr)
library(ggplot2)
library(reshape2)
library(RColorBrewer)
library(knitrBootstrap)
library(xtable)
library(scales)
library(animation)
library(cttools)
library(fslr)
writepng = function(fname, tempimg= NULL, adder ='', rerun=TRUE,
text = "", col.y = alpha(hotmetal(10), 0.7), ...){
pngname = gsub("\\.nii\\.gz",
paste0(adder, ".png"), fname)
if (!file.exists(pngname) | rerun){
pimg = readNIfTI(fname)
# mask.overlay
png(pngname, type="cairo")
if (is.null(tempimg)) {
orthographic(pimg, text=text, ...)
} else {
mask.overlay(tempimg, pimg, col.y=col.y, ...)
}
dev.off()
}
return(pngname)
}
img_cut = function(img, breaks, ...){
cuts = cut(img, breaks=breaks, ...)
# cuts = factor(cuts, levels)
levs = levels(cuts)
cuts = as.numeric(cuts)
# res.p[ rs > ncut ] = cuts
img@.Data = array(cuts, dim=dim(img))
return(list(img=img, levs=levs))
}
### need cairo for cluster
options(bitmapType='cairo')
homedir = "/Applications"
rootdir = "/Volumes/DATA_LOCAL/Image_Processing"
if (Sys.info()[["user"]] %in% "jmuschel") {
homedir = "~"
rootdir = "/dexter/disk2/smart/stroke_ct/ident"
}
progdir = file.path(rootdir, "programs")
# source(file.path(progdir, "convert_DICOM.R"))
# source(file.path(progdir, "fslhd.R"))
basedir = file.path(rootdir, "Registration")
#### baseline NIHSSS ata
nihss = read.csv(file.path(basedir, "baseline_NIHSS.csv"),
stringsAsFactors=FALSE)
tempdir = file.path(rootdir, "Template")
atlasdir = file.path(tempdir, "atlases")
outdir = file.path(basedir, "results")
whichdir = "reoriented"
# whichdir = "FLIRT"
rerun = FALSE
template = file.path(tempdir, "scct_unsmooth.nii.gz")
temp = readNIfTI(template)
t.t1 = file.path(tempdir, "sct1_unsmooth.nii.gz")
temp.t1 = readNIfTI(t.t1)
setwd(progdir)
spm.binimg = file.path(outdir, paste0(whichdir, "_Binary_Sum_Image"))
spm.binimg = paste0(spm.binimg, ".nii.gz")
col.y = alpha(div_gradient_pal(low="blue",
mid=muted("red"),
high="yellow")(
seq(0, 1, length=100)
), 1)
fname = spm.binimg
spm2_t1_hot_overlay.png = writepng(spm.binimg, tempimg= temp.t1,
adder = "_t1_heat_overlay", window = c(500, 1000),
col.y = col.y,
rerun=TRUE, text ="Weighted Average")
tempimg = temp.t1
window = c(300, 1000)
text ="Population Average"
pimg = readNIfTI(fname)
####
breaks = seq(0, .45, by=.05)
col.cut = alpha(div_gradient_pal(low="blue",
mid="red",
high="yellow")(
seq(0, 1, length=length(breaks)-1)
), .7)
img = check_nifti(tempimg)
img.mask = check_nifti(pimg)
img@cal_min = window[1]
img@cal_max = window[2]
img[img < window[1]] = window[1]
img[img >= window[2]] = window[2]
img.mask[img.mask <= 0] = NA
clist = img_cut(pimg, breaks=breaks, include.lowest=FALSE)
cimg = clist$img
levs = clist$levs
plevs = levs
plevs = gsub("\\(", "", plevs)
plevs = gsub("\\]", "", plevs)
plevs = strsplit(plevs, ",")
plevs = lapply(plevs, as.numeric)
plevs = lapply(plevs, `*`, 100)
plevs = lapply(plevs, function(x){
x[2] = x[2] - .01
x
})
plevs = sapply(plevs, function(x){
paste0(x[1], "-", x[2], "%")
})
fname = file.path(outdir, "Figure4_Percent.png")
png(fname, res=600, height=7, width=7, units="in")
ortho2(img, img.mask, col.y=col.cut,
ybreaks = breaks,
addlegend = TRUE,
text="B", text.cex = 5,
text.x= 50, text.y=32,
leg.x = 5, leg.y= 60,
legend=plevs,
leg.col=col.cut, leg.cex=1.5,
leg.title = "Percent of Sample\n with Hemorrhage")
dev.off()
fname = file.path(outdir, "Figure4_Proportion.png")
png(fname, res=600, height=7, width=7, units="in")
ortho2(img, img.mask, col.y=col.cut,
ybreaks = breaks,
addlegend = TRUE,
text="B", text.cex = 5,
text.x= 50, text.y=32,
leg.x = 5, leg.y= 60,
legend=levs,
leg.col=col.cut, leg.cex=1.5,
leg.title = "Proportion of Sample\n with Hemorrhage")
dev.off()
fname = file.path(outdir, "Figure4_Proportion_Final.png")
png(fname, res=600, height=7, width=7, units="in")
ortho2(img, img.mask, col.y=col.cut,
ybreaks = breaks,
addlegend = TRUE,
leg.x = 5, leg.y= 60,
legend=levs,
leg.col=col.cut, leg.cex=1.5,
leg.title = "Proportion of Sample\n with Hemorrhage")
dev.off()
